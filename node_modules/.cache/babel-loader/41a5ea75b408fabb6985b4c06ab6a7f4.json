{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { transferTimeToString, createParticipants } from './CountdownAPI';\nconst initialState = {\n  countSecs: 0.01,\n  countdownString: '00:00'\n};\nexport const createParticipant = createAsyncThunk('countdown/createParticipant', async function () {\n  let nums = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let result = await createParticipants(nums);\n  console.log(result);\n  return result;\n});\nexport const countdownSlice = createSlice({\n  name: 'countdown',\n  initialState,\n  reducers: {\n    setCountMins: (state, action) => {\n      state.countSecs = action.payload * 60;\n      state.countdownString = transferTimeToString(state.countSecs);\n    },\n    countdownExcu: state => {\n      if (state.countSecs > 0) {\n        state.countSecs--;\n        state.countdownString = transferTimeToString(state.countSecs);\n      }\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  countdownExcu,\n  setCountMins\n} = countdownSlice.actions;\nexport const countdownString = state => state.countdown.countdownString;\nexport const countdownSecs = state => state.countdown.countSecs;\nexport default countdownSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","transferTimeToString","createParticipants","initialState","countSecs","countdownString","createParticipant","nums","result","console","log","countdownSlice","name","reducers","setCountMins","state","action","payload","countdownExcu","actions","countdown","countdownSecs","reducer"],"sources":["/Users/tsaoyuyang/Desktop/lottery/src/features/countdown/Countdown.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { transferTimeToString, createParticipants } from './CountdownAPI';\n\nconst initialState = {\n  countSecs: 0.01,\n  countdownString: '00:00'\n}\n\n\nexport const createParticipant = createAsyncThunk(\n  'countdown/createParticipant', \n  async (nums = 1) => {\n    let result = await createParticipants(nums);\n    console.log(result)\n    return result;\n  }\n)\n\nexport const countdownSlice = createSlice({\n  name: 'countdown',\n  initialState,\n  reducers: {\n    setCountMins: (state, action) => {\n      state.countSecs = action.payload * 60;\n      state.countdownString = transferTimeToString(state.countSecs);\n    },\n    countdownExcu: (state) => {\n      if( state.countSecs > 0 ) {\n        state.countSecs --;\n        state.countdownString = transferTimeToString(state.countSecs);\n      }\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { countdownExcu, setCountMins } = countdownSlice.actions;\n\nexport const countdownString = (state) => state.countdown.countdownString;\n\nexport const countdownSecs = (state) => state.countdown.countSecs;\n\nexport default countdownSlice.reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,gBAAzD;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IADQ;EAEnBC,eAAe,EAAE;AAFE,CAArB;AAMA,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAC/C,6BAD+C,EAE/C,kBAAoB;EAAA,IAAbQ,IAAa,uEAAN,CAAM;EAClB,IAAIC,MAAM,GAAG,MAAMN,kBAAkB,CAACK,IAAD,CAArC;EACAE,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,OAAOA,MAAP;AACD,CAN8C,CAA1C;AASP,OAAO,MAAMG,cAAc,GAAGX,WAAW,CAAC;EACxCY,IAAI,EAAE,WADkC;EAExCT,YAFwC;EAGxCU,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACX,SAAN,GAAkBY,MAAM,CAACC,OAAP,GAAiB,EAAnC;MACAF,KAAK,CAACV,eAAN,GAAwBJ,oBAAoB,CAACc,KAAK,CAACX,SAAP,CAA5C;IACD,CAJO;IAKRc,aAAa,EAAGH,KAAD,IAAW;MACxB,IAAIA,KAAK,CAACX,SAAN,GAAkB,CAAtB,EAA0B;QACxBW,KAAK,CAACX,SAAN;QACAW,KAAK,CAACV,eAAN,GAAwBJ,oBAAoB,CAACc,KAAK,CAACX,SAAP,CAA5C;MACD;IACF;EAVO;AAH8B,CAAD,CAAlC,C,CAiBP;;AACA,OAAO,MAAM;EAAEc,aAAF;EAAiBJ;AAAjB,IAAkCH,cAAc,CAACQ,OAAvD;AAEP,OAAO,MAAMd,eAAe,GAAIU,KAAD,IAAWA,KAAK,CAACK,SAAN,CAAgBf,eAAnD;AAEP,OAAO,MAAMgB,aAAa,GAAIN,KAAD,IAAWA,KAAK,CAACK,SAAN,CAAgBhB,SAAjD;AAEP,eAAeO,cAAc,CAACW,OAA9B"},"metadata":{},"sourceType":"module"}