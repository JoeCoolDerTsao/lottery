{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { transferTimeToString, create_Participants } from './CountdownAPI';\nconst initialState = {\n  countSecs: 0.01,\n  countdownString: '00:00',\n  participants: [],\n  luckyPeople: \"\"\n};\nexport const countdownSlice = createSlice({\n  name: 'countdown',\n  initialState,\n  reducers: {\n    resetState: state => {\n      state.countdownString = '00:00';\n      state.luckyPeople = '';\n    },\n    setCountMins: (state, action) => {\n      state.countSecs = action.payload * 60;\n      state.countdownString = transferTimeToString(state.countSecs);\n    },\n    countdownExcu: state => {\n      if (state.countSecs > 0) {\n        state.countSecs--;\n        state.countdownString = transferTimeToString(state.countSecs);\n      }\n    },\n    createParticipants: (state, action) => {\n      let nums = 0;\n      if (action.payload > 0) nums = action.payload;\n      state.participants = create_Participants(nums);\n    },\n    lotteryDraw: state => {\n      state.luckyPeople = state.participants[Math.floor(Math.random() * state.participants.length)].name;\n    }\n  }\n});\nexport const {\n  resetState,\n  countdownExcu,\n  setCountMins,\n  createParticipants,\n  lotteryDraw\n} = countdownSlice.actions;\nexport const countdownString = state => state.countdown.countdownString;\nexport const countdownSecs = state => state.countdown.countSecs;\nexport const participants = state => state.countdown.participants;\nexport const iAmLuckyMan = state => state.countdown.luckyPeople;\nexport default countdownSlice.reducer;","map":{"version":3,"names":["createSlice","transferTimeToString","create_Participants","initialState","countSecs","countdownString","participants","luckyPeople","countdownSlice","name","reducers","resetState","state","setCountMins","action","payload","countdownExcu","createParticipants","nums","lotteryDraw","Math","floor","random","length","actions","countdown","countdownSecs","iAmLuckyMan","reducer"],"sources":["/Users/tsaoyuyang/Desktop/lottery/src/features/countdown/Countdown.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { transferTimeToString, create_Participants } from './CountdownAPI';\n\nconst initialState = {\n  countSecs: 0.01,\n  countdownString: '00:00',\n  participants: [],\n  luckyPeople : \"\"\n}\n\nexport const countdownSlice = createSlice({\n  name: 'countdown',\n  initialState,\n  reducers: {\n    resetState: (state) => {\n      state.countdownString = '00:00';\n      state.luckyPeople = '';\n    },\n    setCountMins: (state, action) => {\n      state.countSecs = action.payload * 60;\n      state.countdownString = transferTimeToString(state.countSecs);\n    },\n    countdownExcu: (state) => {\n      if( state.countSecs > 0 ) {\n        state.countSecs --;\n        state.countdownString = transferTimeToString(state.countSecs);\n      }\n    },\n    createParticipants: (state, action) => {\n      let nums = 0;\n      if ( action.payload > 0 ) nums = action.payload;\n      state.participants = create_Participants(nums);\n    },\n    lotteryDraw: (state) => {\n      state.luckyPeople = state.participants[Math.floor(Math.random() * state.participants.length)].name;\n    }\n  },\n})\n\nexport const { resetState, countdownExcu, setCountMins, createParticipants, lotteryDraw } = countdownSlice.actions;\n\nexport const countdownString = (state) => state.countdown.countdownString;\n\nexport const countdownSecs = (state) => state.countdown.countSecs;\n\nexport const participants = (state) => state.countdown.participants;\n\nexport const iAmLuckyMan = (state) => state.countdown.luckyPeople;\n\nexport default countdownSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,gBAA1D;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IADQ;EAEnBC,eAAe,EAAE,OAFE;EAGnBC,YAAY,EAAE,EAHK;EAInBC,WAAW,EAAG;AAJK,CAArB;AAOA,OAAO,MAAMC,cAAc,GAAGR,WAAW,CAAC;EACxCS,IAAI,EAAE,WADkC;EAExCN,YAFwC;EAGxCO,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAD,IAAW;MACrBA,KAAK,CAACP,eAAN,GAAwB,OAAxB;MACAO,KAAK,CAACL,WAAN,GAAoB,EAApB;IACD,CAJO;IAKRM,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC/BF,KAAK,CAACR,SAAN,GAAkBU,MAAM,CAACC,OAAP,GAAiB,EAAnC;MACAH,KAAK,CAACP,eAAN,GAAwBJ,oBAAoB,CAACW,KAAK,CAACR,SAAP,CAA5C;IACD,CARO;IASRY,aAAa,EAAGJ,KAAD,IAAW;MACxB,IAAIA,KAAK,CAACR,SAAN,GAAkB,CAAtB,EAA0B;QACxBQ,KAAK,CAACR,SAAN;QACAQ,KAAK,CAACP,eAAN,GAAwBJ,oBAAoB,CAACW,KAAK,CAACR,SAAP,CAA5C;MACD;IACF,CAdO;IAeRa,kBAAkB,EAAE,CAACL,KAAD,EAAQE,MAAR,KAAmB;MACrC,IAAII,IAAI,GAAG,CAAX;MACA,IAAKJ,MAAM,CAACC,OAAP,GAAiB,CAAtB,EAA0BG,IAAI,GAAGJ,MAAM,CAACC,OAAd;MAC1BH,KAAK,CAACN,YAAN,GAAqBJ,mBAAmB,CAACgB,IAAD,CAAxC;IACD,CAnBO;IAoBRC,WAAW,EAAGP,KAAD,IAAW;MACtBA,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACN,YAAN,CAAmBc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,KAAK,CAACN,YAAN,CAAmBiB,MAA9C,CAAnB,EAA0Ed,IAA9F;IACD;EAtBO;AAH8B,CAAD,CAAlC;AA6BP,OAAO,MAAM;EAAEE,UAAF;EAAcK,aAAd;EAA6BH,YAA7B;EAA2CI,kBAA3C;EAA+DE;AAA/D,IAA+EX,cAAc,CAACgB,OAApG;AAEP,OAAO,MAAMnB,eAAe,GAAIO,KAAD,IAAWA,KAAK,CAACa,SAAN,CAAgBpB,eAAnD;AAEP,OAAO,MAAMqB,aAAa,GAAId,KAAD,IAAWA,KAAK,CAACa,SAAN,CAAgBrB,SAAjD;AAEP,OAAO,MAAME,YAAY,GAAIM,KAAD,IAAWA,KAAK,CAACa,SAAN,CAAgBnB,YAAhD;AAEP,OAAO,MAAMqB,WAAW,GAAIf,KAAD,IAAWA,KAAK,CAACa,SAAN,CAAgBlB,WAA/C;AAEP,eAAeC,cAAc,CAACoB,OAA9B"},"metadata":{},"sourceType":"module"}